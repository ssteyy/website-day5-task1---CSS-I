## Flexbox: A Powerful Layout System

Flexbox is a CSS layout module designed to provide a flexible and efficient way to arrange items on a web page. It's particularly useful for creating responsive layouts that adapt to different screen sizes.

### Key Concepts

* **Flex Container:** The parent element that establishes the flexbox layout.
* **Flex Items:** The child elements within the flex container.
* **Flex Axis:** The main axis along which flex items are arranged.
* **Cross Axis:** The axis perpendicular to the flex axis.

### Properties

* **`display: flex;`:** Sets the container as a flex container.
* **`flex-direction`:** Controls the direction of the flex axis.
  - `row`: Items are arranged horizontally, left to right.
  - `row-reverse`: Items are arranged horizontally, right to left.
  - `column`: Items are arranged vertically, top to bottom.
  - `column-reverse`: Items are arranged vertically, bottom to top.
* **`justify-content`:** Aligns flex items along the main axis.
  - `flex-start`: Items are aligned to the start of the container.
  - `flex-end`: Items are aligned to the end of the container.
  - `center`: Items are centered within the container.
  - `space-between`: Items are spaced evenly with the first item at the start and the last item at the end.
  - `space-around`: Items are spaced evenly with equal gaps on both sides of each item.
* **`align-items`:** Aligns flex items along the cross axis.
  - `flex-start`: Items are aligned to the start of the cross axis.
  - `flex-end`: Items are aligned to the end of the cross axis.
  - `center`: Items are centered along the cross axis.
  - `stretch`: Items are stretched to fill the cross axis.

### Example: Responsive Layout

```html
<!DOCTYPE html>
<html>
<head>
    <title>Flexbox Layout</title>
    <style>
        .container {
            display: flex;
            flex-wrap: wrap;
        }

        .item {
            flex: 0 0 200px;
            padding: 20px;
            border: 1px solid black;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="item">Item 1</div>
        <div class="item">Item 2</div>
        <div class="item">Item 3</div>
        <div class="item">Item 4</div>
        <div class="item">Item 5</div>
    </div>
</body>
</html>
```

In this example:

* The `.container` div is set as a flex container.
* The `flex-wrap: wrap;` property allows items to wrap to the next line when there's not enough space on the current line.
* The `.item` divs have a fixed width of 200 pixels, ensuring they don't stretch beyond their specified size.

By adjusting the `flex-direction`, `justify-content`, and `align-items` properties, you can create various layout arrangements to suit your needs. Flexbox provides a powerful and flexible way to design responsive layouts that adapt to different screen sizes.